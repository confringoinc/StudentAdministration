{"version":3,"sources":["components/Profile.js"],"names":["Login","lazy","retry","Profile","token","useLocation","state","useState","dataStudent","setData","headers","history","useHistory","useEffect","axios","get","API","then","response","data","catch","error","console","log","className","to","pathname","src","alt","firstName","lastName","scope","enrollmentNo","branch","semester","email","mobileNo","gender","getDateShort","dob","onClick","push","window","confirm","delete","success","alert"],"mappings":"kLAKMA,EAAQC,gBAAK,kBAAMC,aAAM,kBAAM,yDAkItBC,UAhIC,WACd,IACMC,EADWC,cACMC,MACvB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAU,CACd,cAAgB,UAAhB,OAA2BN,GAC3B,eAAgB,qCAGZO,EAAUC,cAgDhB,OAnBAC,qBAAU,WACR,IAAMH,EAAU,CACd,cAAgB,UAAhB,OAA2BN,GAC3B,eAAgB,qCAIhBU,IAAMC,IAAIC,IAAM,uBAAwB,CAAE,QAAWN,IAClDO,MAAK,SAAUC,GACdT,EAAQS,EAASC,KAAKA,SAEvBC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,QAKjB,CAACjB,IAGFA,EACE,qCACE,qBAAKoB,UAAU,8CAAf,SACE,sBAAKA,UAAU,YAAf,UACE,eAAC,IAAD,CAAMA,UAAU,eAAeC,GAAI,CACjCC,SAAU,0BACVpB,MAAOF,GAFT,oBAGU,sBAAMoB,UAAU,eAAhB,uBACV,gCACE,cAAC,IAAD,CAAMC,GAAI,CACRC,SAAU,0BACVpB,MAAOF,GAFT,kBAIA,cAAC,IAAD,CAAMoB,UAAU,+BAA+BC,GAAG,+BAAlD,6BAIN,qBAAKD,UAAU,iBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,2BAA2BG,IAAI,mCAAmCC,IAAI,cAEvF,qBAAKJ,UAAU,mBAAf,SACGhB,EACC,qCACE,qBAAIgB,UAAU,gCAAd,UAA+ChB,EAAYqB,UAA3D,IAAuErB,EAAYsB,YACnF,uBAAON,UAAU,2BAAjB,SACE,kCACE,+BACE,oBAAIO,MAAM,iBAAV,+BACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAYwB,kBAE1C,+BACE,oBAAID,MAAM,iBAAV,oBACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAYyB,YAE1C,+BACE,oBAAIF,MAAM,iBAAV,sBACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAY0B,cAE1C,+BACE,oBAAIH,MAAM,iBAAV,oBACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAY2B,WAE1C,+BACE,oBAAIJ,MAAM,iBAAV,2BACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAY4B,cAE1C,+BACE,oBAAIL,MAAM,iBAAV,oBACA,oBAAIP,UAAU,aAAd,SAA4BhB,EAAY6B,YAE1C,+BACE,oBAAIN,MAAM,iBAAV,2BACA,oBAAIP,UAAU,aAAd,SAA4Bc,YAAa9B,EAAY+B,eAI3D,sBAAKf,UAAU,YAAf,UACE,wBAAQA,UAAU,kBAAkBgB,QAzFlC,WAClB7B,EAAQ8B,KAAK,CACXf,SAAU,8BACVpB,MAAO,CACLF,MAAOA,EACPe,KAAMX,MAoFM,kBAAuE,wBAAQgB,UAAU,sBAAsBgB,QA1G3G,WACjBE,OAAOC,QAAQ,kBAChB7B,IAAM8B,OAAO5B,IAAM,kBAAmB,CAAE,QAAWN,IAChDO,MAAK,SAAUC,IACgB,IAA1BA,EAASC,KAAK0B,QAChBlC,EAAQ8B,KAAK,gCAGbK,MAAM,iCAGT1B,OAAM,WACL0B,MAAM,kCA8F2E,kCAErE,8BAIV,cAAC9C,EAAD","file":"static/js/17.e3212b29.chunk.js","sourcesContent":["import React, { lazy, useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { retry, getDateShort, API } from '../utils/CommonFunctions';\r\nimport axios from 'axios';\r\nconst Login = lazy(() => retry(() => import('./Login')));\r\n\r\nconst Profile = () => {\r\n  const location = useLocation();\r\n  const token = location.state;\r\n  const [dataStudent, setData] = useState([]);\r\n  \r\n  const headers = {\r\n    'Authorization': `Bearer ${token}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }\r\n\r\n  const history = useHistory();\r\n\r\n  const deleteHandler = () => {\r\n    if(window.confirm('Are you sure?')) {\r\n      axios.delete(API + '/student/delete', { \"headers\": headers })\r\n        .then(function (response) {\r\n          if (response.data.success === true) {\r\n            history.push('/StudentAdministration/login');\r\n          }\r\n          else {\r\n            alert(\"Account deletion failed...\");\r\n          }\r\n        })\r\n        .catch(function () {\r\n          alert(\"Account deletion failed...\");\r\n        })\r\n    }\r\n  }\r\n\r\n  const editHandler = () => {\r\n    history.push({\r\n      pathname: '/StudentAdministration/edit',\r\n      state: {\r\n        token: token,\r\n        data: dataStudent\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Authorization': `Bearer ${token}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n\r\n    const getData = () => {\r\n      axios.get(API + '/student/get-profile', { \"headers\": headers })\r\n        .then(function (response) {\r\n          setData(response.data.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    getData();\r\n  }, [token])\r\n\r\n  return (\r\n    token ? \r\n      <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to={{\r\n              pathname: '/StudentAdministration/',\r\n              state: token\r\n            }}>Student<span className=\"text-primary\">Center</span></Link>\r\n            <div>\r\n              <Link to={{\r\n                pathname: '/StudentAdministration/',\r\n                state: token\r\n              }}>Home</Link>\r\n              <Link className=\"ms-2 ms-sm-3 ms-md-4 ms-lg-5\" to='/StudentAdministration/login'>Log out</Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"mt-5 container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-2\">\r\n              <img className=\"img-fluid rounded-circle\" src=\"https://i.pravatar.cc/150?img=12\" alt='profile' />\r\n            </div>\r\n            <div className=\"col-12 col-md-10\">\r\n              {dataStudent ? \r\n                <>\r\n                  <h2 className=\"font-weight-bold mt-5 mt-md-0\">{dataStudent.firstName} {dataStudent.lastName}</h2>\r\n                  <table className=\"table table-striped mt-3\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Enrollment number</th>\r\n                        <td className=\"text-break\">{dataStudent.enrollmentNo}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Branch</th>\r\n                        <td className=\"text-break\">{dataStudent.branch}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Semester</th>\r\n                        <td className=\"text-break\">{dataStudent.semester}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">E-mail</th>\r\n                        <td className=\"text-break\">{dataStudent.email}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Mobile number</th>\r\n                        <td className=\"text-break\">{dataStudent.mobileNo}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Gender</th>\r\n                        <td className=\"text-break\">{dataStudent.gender}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <th scope=\"row text-break\">Date of birth</th>\r\n                        <td className=\"text-break\">{getDateShort(dataStudent.dob)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div className=\"mt-5 mb-5\">\r\n                    <button className=\"btn btn-primary\" onClick={editHandler}>Edit</button><button className=\"ms-3 btn btn-danger\" onClick={deleteHandler}>Delete account</button>\r\n                  </div>\r\n                </> : 'No data available'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </> : <Login />\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}