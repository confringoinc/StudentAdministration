{"version":3,"sources":["components/Admin.js"],"names":["Login","lazy","retry","BranchChart","GenderChart","Admin","token","useLocation","state","useState","dataStudents","setDataStudents","history","useHistory","headers","useEffect","params","page","limit","axios","get","API","then","response","data","catch","error","console","log","columns","useMemo","Header","accessor","Cell","row","isNaN","id","parseInt","cell","values","enrollmentNo","className","onClick","push","pathname","window","confirm","delete","success","location","reload","alert","tableInstance","useTable","useFilters","useGlobalFilter","useGroupBy","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","setGlobalFilter","preGlobalFilteredRows","pageIndex","pageSize","globalFilter","value","setValue","to","onChange","e","target","undefined","placeholder","length","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","canGroupBy","getGroupByToggleProps","isGrouped","i","getRowProps","cells","getCellProps","getToggleRowExpandedProps","isExpanded","subRows","isAggregated","isPlaceholder","htmlFor","type","defaultValue","Number","disabled"],"mappings":"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","file":"static/js/12.f0a1486d.chunk.js","sourcesContent":["import React, { useState, useEffect, lazy, useMemo } from 'react';\r\nimport { useLocation, useHistory } from 'react-router';\r\nimport { retry, API } from '../utils/CommonFunctions';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useTable, usePagination, useSortBy, useGlobalFilter, useFilters, useGroupBy, useExpanded } from 'react-table';\r\nimport { FiChevronRight, FiChevronLeft, FiChevronsLeft, FiChevronsRight, FiChevronDown, FiChevronUp, FiTrash, FiEdit3, FiArrowDownLeft, FiX } from 'react-icons/fi';\r\nconst Login = lazy(() => retry(() => import('./Login')));\r\nconst BranchChart = lazy(() => retry(() => import('./BranchChart')));\r\nconst GenderChart = lazy(() => retry(() => import('./GenderChart')));\r\n\r\nconst Admin = () => {\r\n  const location = useLocation();\r\n  const token = location.state;\r\n  const [dataStudents, setDataStudents] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const handleEdit = (values) => {\r\n    history.push({\r\n      pathname: '/StudentAdministration/edit/' + values.enrollmentNo,\r\n      state: {\r\n        token: token,\r\n        data: values\r\n      }\r\n    });\r\n  };\r\n\r\n  const headers = {\r\n    'Authorization': `Bearer ${token}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }\r\n\r\n  const handleDelete = (enrollmentNo) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      axios.delete(API + '/admin/delete-student/' + enrollmentNo, { \"headers\": headers })\r\n        .then(function (response) {\r\n          if (response.data.success === true) {\r\n            window.location.reload()\r\n          }\r\n          else {\r\n            alert(\"Account deletion failed...\");\r\n          }\r\n        })\r\n        .catch(function () {\r\n          alert(\"Account deletion failed...\");\r\n        })\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n\r\n    const params = {\r\n      page: 1,\r\n      limit: 10000\r\n    }\r\n\r\n    const getData = () => {\r\n      axios.get(API + '/admin/get-students', { \"params\": params, \"headers\": headers })\r\n        .then(function (response) {\r\n          setDataStudents(response.data.data);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        })\r\n    }\r\n\r\n    getData();\r\n  }, [token]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '#',\r\n        accessor: 'index',\r\n        Cell: ({ row }) => (\r\n          <>\r\n            {isNaN(row.id) ? '' : parseInt(row.id) + 1}\r\n          </>\r\n        )\r\n      },\r\n      {\r\n        Header: 'Edit',\r\n        accessor: 'edit',\r\n        Cell: ({ cell }) => (\r\n          cell.row.values.enrollmentNo ?\r\n            <button className=\"btn btn-primary\" onClick={() => handleEdit(cell.row.values)}>\r\n              <FiEdit3 />\r\n            </button> : ''\r\n        )\r\n      },\r\n      {\r\n        Header: 'Delete',\r\n        accessor: 'delete',\r\n        Cell: ({ cell }) => (\r\n          cell.row.values.enrollmentNo ?\r\n            <button className=\"btn btn-danger\" onClick={() => handleDelete(cell.row.values.enrollmentNo)}>\r\n              <FiTrash />\r\n            </button> : ''\r\n        )\r\n      },\r\n      {\r\n        Header: 'Enrollment No',\r\n        accessor: 'enrollmentNo',\r\n      },\r\n      {\r\n        Header: 'First name',\r\n        accessor: 'firstName',\r\n      },\r\n      {\r\n        Header: 'Last name',\r\n        accessor: 'lastName',\r\n      },\r\n      {\r\n        Header: 'Semester',\r\n        accessor: 'semester',\r\n      },\r\n      {\r\n        Header: 'DOB',\r\n        accessor: 'dob',\r\n      },\r\n      {\r\n        Header: 'Gender',\r\n        accessor: 'gender',\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'email',\r\n      },\r\n      {\r\n        Header: 'Mobile No',\r\n        accessor: 'mobileNo',\r\n      },\r\n      {\r\n        Header: 'Branch',\r\n        accessor: 'branch',\r\n      },\r\n      {\r\n        Header: 'Created At',\r\n        accessor: 'createdAt',\r\n      },\r\n      {\r\n        Header: 'Updated At',\r\n        accessor: 'updatedAt',\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const tableInstance = useTable({ columns, data: dataStudents }, useFilters, useGlobalFilter, useGroupBy, useSortBy, useExpanded, usePagination);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    state,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    setGlobalFilter,\r\n    preGlobalFilteredRows,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n  const [value, setValue] = useState(state.globalFilter);\r\n  const handleOnChange = (e) => {\r\n    setValue(e.target.value);\r\n    setGlobalFilter(e.target.value || undefined);\r\n  }\r\n\r\n  return (\r\n    token ?\r\n      <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-brand\">Student<span className=\"text-primary\">Center</span></div>\r\n            <div>\r\n              <Link to='/StudentAdministration/login'>Log out</Link>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container mt-5\">\r\n          <h2>Students data</h2>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\r\n              <input\r\n                id=\"search\"\r\n                className=\"form-control\"\r\n                onChange={handleOnChange}\r\n                value={value || \"\"}\r\n                placeholder={`Serach in ${preGlobalFilteredRows.length} records...`}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"mt-3 table table-striped align-middle\" {...getTableProps()}>\r\n              <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                      <th className=\"text-nowrap\" {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                        {column.render('Header')}\r\n                        <span>\r\n                          {column.isSorted\r\n                            ? column.isSortedDesc\r\n                              ? <span className=\"mx-2\">\r\n                                <FiChevronDown />\r\n                              </span>\r\n                              : <span className=\"mx-2\">\r\n                                <FiChevronUp />\r\n                              </span>\r\n                            : ''}\r\n                        </span>\r\n                        {column.canGroupBy ? (\r\n                          <span {...column.getGroupByToggleProps()}>\r\n                            {column.isGrouped ? <span className=\"mx-2\"><FiX /></span> : <span className=\"mx-2\"><FiArrowDownLeft /></span>}\r\n                          </span>\r\n                        ) : null}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </thead>\r\n              <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                  prepareRow(row)\r\n                  return (\r\n                    <tr {...row.getRowProps()}>\r\n                      {row.cells.map(cell => {\r\n                        return (\r\n                          <td className=\"text-nowrap\" {...cell.getCellProps()}>\r\n                            {cell.isGrouped ? (\r\n                              <>\r\n                                <span {...row.getToggleRowExpandedProps()}>\r\n                                  {row.isExpanded ? <span className=\"mx-2\"><FiChevronUp /></span> : <span className=\"mx-2\"><FiChevronRight /></span>}\r\n                                </span>{' '}\r\n                                {cell.render('Cell')} ({row.subRows.length})\r\n                              </>\r\n                            ) : cell.isAggregated ? (\r\n                              cell.render('Aggregated')\r\n                            ) : cell.isPlaceholder ? null : (\r\n                              cell.render('Cell')\r\n                            )}\r\n                          </td>\r\n                        )\r\n                      })}\r\n                    </tr>\r\n                  )\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"pagination mb-5 row align-items-center\">\r\n            <div className=\"col mt-3\">\r\n              Page <span className=\"text-weight-bold\">{pageIndex + 1} of {pageOptions.length}</span>\r\n            </div>\r\n            <div className=\"col-md-4 col-6 mt-3\">\r\n              <div className=\"row\">\r\n                <div className=\"col-auto\">\r\n                  <label htmlFor=\"goto\" className=\"col-form-label\">Go to page</label>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <input\r\n                    id=\"goto\"\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    defaultValue={pageIndex + 1}\r\n                    onChange={e => {\r\n                      const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                      gotoPage(page)\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-6 mt-3\">\r\n              <select\r\n                className=\"form-select\"\r\n                value={pageSize}\r\n                onChange={e => {\r\n                  setPageSize(Number(e.target.value))\r\n                }}\r\n              >\r\n                {[10, 20, 30, 40, 50].map(pageSize => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-auto col-6 mt-3\">\r\n              <button className=\"btn btn-outline-primary\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}><FiChevronsLeft /></button>\r\n              <button className=\"btn btn-outline-primary\" onClick={() => previousPage()} disabled={!canPreviousPage}><FiChevronLeft /></button>\r\n              <button className=\"btn btn-outline-primary\" onClick={() => nextPage()} disabled={!canNextPage}><FiChevronRight /></button>\r\n              <button className=\"btn btn-outline-primary\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}><FiChevronsRight /></button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h2>Data Trends</h2>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-md-6\">\r\n                <BranchChart dataStudents={dataStudents} />\r\n              </div>\r\n              <div className=\"col-12 col-md-6\">\r\n                <GenderChart dataStudents={dataStudents} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </> : <Login />\r\n  )\r\n}\r\n\r\nexport default Admin"],"sourceRoot":""}