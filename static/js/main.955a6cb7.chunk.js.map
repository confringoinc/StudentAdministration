{"version":3,"sources":["components/ScrollToTop.js","components/Loader.js","App.js","reportWebVitals.js","index.js","utils/CommonFunctions.js"],"names":["ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Loader","className","Home","lazy","retry","Register","Login","Profile","Edit","Admin","App","console","log","pages","pageLink","view","fallback","map","page","index","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","API","fn","retriesLeft","interval","Promise","resolve","reject","catch","error","setTimeout","getDateShort","datetime","Date","toLocaleString","year","month","day"],"mappings":"mOAGe,SAASA,IACtB,IAAQC,EAAaC,cAAbD,SAMR,OAJAE,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACJ,IAEG,K,WCEMK,EAVA,WACb,OACE,8BACE,qBAAIC,UAAU,0DAAd,oBACS,sBAAMA,UAAU,eAAhB,0BCATC,EAAOC,gBAAK,kBAAMC,aAAM,kBAAM,oCAC9BC,EAAWF,gBAAK,kBAAMC,aAAM,kBAAM,gEAClCE,EAAQH,gBAAK,kBAAMC,aAAM,kBAAM,gEAC/BG,EAAUJ,gBAAK,kBAAMC,aAAM,kBAAM,0DACjCI,EAAOL,gBAAK,kBAAMC,aAAM,kBAAM,0DAC9BK,EAAQN,gBAAK,kBAAMC,aAAM,kBAAM,iEA2DtBM,EAzDH,WAEVC,QAAQC,IAAI,kCAA8B,0FAE1C,IAAMC,EAAQ,CACZ,CACEC,SAAU,IACVC,KAAMb,GAER,CACEY,SAAU,YACVC,KAAMV,GAER,CACES,SAAU,SACVC,KAAMT,GAER,CACEQ,SAAU,WACVC,KAAMR,GAER,CACEO,SAAU,QACVC,KAAMP,GAER,CACEM,SAAU,YACVC,KAAMP,GAER,CACEM,SAAU,SACVC,KAAMN,IAIV,OACE,eAAC,IAAD,WACE,cAACf,EAAD,IACA,cAAC,WAAD,CAAUsB,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACGH,EAAMI,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAMH,EAAKJ,SACXQ,OAAQ,kBAAM,cAACJ,EAAKH,KAAN,MACTI,MAIX,cAAC,IAAD,CAAUI,GAAG,eCnDRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,+BChBA,sGAAO,IAAMa,EAAM,+BAEZ,SAASjC,EAAMkC,GAAuC,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAN,IACpD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BL,IACGX,KAAKe,GACLE,OAAM,SAACC,GACNC,YAAW,WACW,IAAhBP,EAOJnC,EAAMkC,EAAIC,EAAc,EAAGC,GAAUb,KAAKe,EAASC,GALjDA,EAAOE,KAMRL,SAKJ,IAAMO,EAAe,SAACC,GAG3B,OAFa,IAAIC,KAAKD,GAETE,eAAe,QADZ,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,e","file":"static/js/main.955a6cb7.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n        Student<span className=\"text-primary\">Center</span>\r\n      </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import './App.css';\nimport React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { retry } from './utils/CommonFunctions';\nimport ScrollToTop from './components/ScrollToTop';\nimport Loader from './components/Loader';\nconst Home = lazy(() => retry(() => import('./components/Home')));\nconst Register = lazy(() => retry(() => import('./components/Register')));\nconst Login = lazy(() => retry(() => import('./components/Login')));\nconst Profile = lazy(() => retry(() => import('./components/Profile')));\nconst Edit = lazy(() => retry(() => import('./components/Edit')));\nconst Admin = lazy(() => retry(() => import('./components/Admin')));\n\nconst App = () => {\n\n  console.log('%cMade with ‚ù§ by Hit Patel', 'color: black; background: grey; font-size: 15px; padding: 5px 15px; border-radius: 6px');\n\n  const pages = [\n    {\n      pageLink: '/',\n      view: Home\n    },\n    {\n      pageLink: '/register',\n      view: Register\n    },\n    {\n      pageLink: '/login',\n      view: Login\n    },\n    {\n      pageLink: '/profile',\n      view: Profile\n    },\n    {\n      pageLink: '/edit',\n      view: Edit\n    },\n    {\n      pageLink: '/edit/:id',\n      view: Edit\n    },\n    {\n      pageLink: '/admin',\n      view: Admin\n    }\n  ];\n\n  return (\n    <Router>\n      <ScrollToTop />\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          {pages.map((page, index) => {\n            return (\n              <Route\n                exact\n                path={page.pageLink}\n                render={() => <page.view />}\n                key={index}\n              />\n            );\n          })}\n          <Redirect to='/' />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const API = \"http://b62789cc4691.ngrok.io\";\r\n\r\nexport function retry(fn, retriesLeft = 5, interval = 1000) {\r\n  return new Promise((resolve, reject) => {\r\n    fn()\r\n      .then(resolve)\r\n      .catch((error) => {\r\n        setTimeout(() => {\r\n          if (retriesLeft === 1) {\r\n            // reject('maximum retries exceeded');\r\n            reject(error);\r\n            return;\r\n          }\r\n\r\n          // Passing on \"reject\" is the important part\r\n          retry(fn, retriesLeft - 1, interval).then(resolve, reject);\r\n        }, interval);\r\n      });\r\n  });\r\n}\r\n\r\nexport const getDateShort = (datetime) => {\r\n  const date = new Date(datetime);\r\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n  return (date.toLocaleString(\"en-US\", options));\r\n}"],"sourceRoot":""}